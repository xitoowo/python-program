# Обработка исключений
# В языке Python существует множество встроенных исключений,
# которые вызываются, когда программа сталкивается с ошибкой.
# Когда такое исключение возникает, интерпретатор Python останавливает текущий процесс и
# передает управление новому, для обработки данного исключения.
# Если его не удается обработать, программа аварийно завершается.

# print(1 / 0)  # ZeroDivisionError: division by zero

try:
    1 / 0
except ZeroDivisionError as Error:
    print(Error)  # division by zero с формате сообщения, а не ошибки

# Блок finally
try:
    1 / 0
except ZeroDivisionError as e:
    print(e)  # division by zero
finally:
    # Этот блок кода будет выполнен в любом случае и
    # обычно используется для освобождения внешних ресурсов
    print('Конец обработки ошибок')  # Конец обработки ошибок

# Блок else
# В некоторых случаях бывает полезным выполнить определенный код в случае, если исключение
# не было вызвано. Для этого можно использовать необязательный блок else вместе с инструкцией try.
#
# Замечание: исключения, возникающие в самом блоке else,
# не будут обработаны в предшествующем ему блоке except.

try:
    1 / 1
except ZeroDivisionError as e:
    print(e)  # Вызвано не будет
else:
    print('Блок else')  # Блок else

try:
    1 / 0
except ZeroDivisionError as e:
    print(e)  # division by zero
else:
    print('Блок else')  # Вызвано не будет
