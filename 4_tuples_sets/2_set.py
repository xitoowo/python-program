# Множества
# В Python множества очень похожи на списки, за исключением того факта, что их элементы неизменяемы.
# Это означает, что вы не можете изменять элементы уже объявленного множества.
# Но добавлять и удалять элементы из множества можно. (Создается новое множество взамен старого)
# Другими словами, множество – это изменяемая неупорядоченная группа элементов, в которой сами элементы неизменяемы.
# Другой особенностью множества является то, что оно может включать в себя элементы разных типов.
# Это означает, что у вас в одном множестве могут быть числа, строки и и даже кортежи!
# Самая важная особенность множеств, то что они не хранят дубликаты
# Хэши элементов рассчиваются при создании множества!

# Объявление пустого множества
# Использование set необходимо для создания можества
myset = set()
print(type(myset))  # <class 'set'>

# Использование пустых {} скобок приведет к созданию словаря, а не множества
myset = {}
print(type(myset))  # <class 'dict'>

# Множество интов
myset = {1, 2, 3, 4, 5}  # {1, 2, 3, 4, 5}
print(myset)

# Множество с различными типами данных
myset = {1, 'Hello', 3.5}  # {1, 'Hello', 3.5}
print(myset)

# Множество с одинаковыми элементами
myset = {1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 5}  # {1, 2, 3, 4, 5}
print(myset)

# Независимо от способа создания множества каждый его элемент должен быть неизменяемым объектом.
# Поэтому, при добавлении списока в множество, произойдет ошибка, ведь списки изменяемы.
# myset = {1, '', ['H', 'e', 'l', 'lo'], 3.5}  # TypeError: unhashable type: 'list'

# при добавлении множества в множество, произойдет ошибка, ведь множества изменяемы.
# myset = {'World', {1, 2, 3}, 4, {5.6, 7.8}, {'H'}, 'ello'}  # TypeError: unhashable type: 'set'

# Вложенное множество с кортежем
myset = {1, '', ('H', 'e', 'l', 'lo'), 3.5}  # {'', 1, 3.5, ('H', 'e', 'l', 'lo')}
print(myset)

# Индексация и обращение к элементам
# Множества не поддерживают индексацию, тк каждый раз элементы расположены в разном порядке
myset = {'h', 'e', 'l', 'l', 'o'}
print(myset)
# print(myset[0])  # TypeError: 'set' object is not subscriptable

# Индексация и обращение к элементам вложенного списка, смотрите выше на 43 строчку
myset = {'World', (1, 2, 3), 4, (5.6, 7.8), ('H'), 'ello'}
print(myset)
# print(mylist[1][1])  # TypeError: 'set' object is not subscriptable

# Элементы указанные без запятой, будут считаться одним элементом
myset = {'H', 'e' 'l' 'l' 'o' 'W', 'o', 'r' 'l' 'd', '!'}
print(myset)  # {'o', 'H', '!', 'elloW', 'rld'}

# Множества не поддерживают срезы
myset = {'H', 'e', 'l', 'l', 'o', 'W', 'o', 'r', 'l', 'd', '!'}
print(myset)
# print(myset[2:5])  # TypeError: 'set' object is not subscriptable

# Множества не поддерживают склейку, объединение множеств в 2_set_operations
# myset = {1, 2, 3} + {4, 5, 6}  # TypeError: unsupported operand type(s) for +: 'set' and 'set'


# Методы множеств
myset = {1, 2, 3, 4}  # {1, 2, 3, 4}
print(myset)

# Добавление элемента в конец
myset.add(5)  # {1, 2, 3, 4, 5}
print(myset)

# Добавление нескольких элементов
# update принимает последовательность элементов (кортежи, списки, строки и другие сножества)
# Список
myset.update([6, 7, 8])  # {1, 2, 3, 4, 5, 6, 7, 8}
print(myset)
# При попытке добавить в множество элемент, который уже есть в множестве, то ничего не изменится
# Кортеж
myset.update((6, 7, 8))  # {1, 2, 3, 4, 5, 6, 7, 8}
print(myset)
# Сет
myset.update({6, 7, 8})  # {1, 2, 3, 4, 5, 6, 7, 8}
print(myset)
# Строки
myset.update('123')  # {1, 2, 3, 4, 5, 6, 7, 8, '3', '2', '1'}
print(myset)

# Удаление значений из множества методом pop
# pop удаляет первый элемент из множества (случайный), но так как при каждом вызове множества
# элементы расположены в случайном порядке, то предугадать этот элемент нельзя
myset = set('Hello,World!')  # {',', 'd', 'r', 'o', '!', 'H', 'e', 'W', 'l'}
print(myset)
myset.pop()  # 'W'
print(myset)  # {',', '!', 'r', 'e', 'l', 'H', 'd', 'o'}

# Удаление значений из множества методом remove
myset = set('Hello,World!')
myset.remove('l')  # {'r', 'e', 'o', 'H', 'W', ',', '!', 'd'}
print(myset)
# При попытке удаления несуществующего элемента будет вызвано исключение KeyError
# myset.remove('l')  # KeyError: 'l'

# Удаление значений из множества методом discard
myset = set('Hello,World!')
myset.discard('l')  # {'d', 'H', 'W', '!', 'r', 'o', 'e', ','}
print(myset)
# При попытке удаления несуществующего элемента не будет вызвано исключение
myset.discard('l')  # {'d', 'H', 'W', '!', 'r', 'o', 'e', ','}
print(myset)

# Очистка множества
myset.clear()  # set()
print(myset)
