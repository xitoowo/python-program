# Продвинутые срезы mytuple[START:STOP:STEP]
mytuple = ('H', 'e', 'l', 'l', 'o', 'W', 'o', 'r', 'l', 'd', '!')
print(mytuple)  # ('H', 'e', 'l', 'l', 'o', 'W', 'o', 'r', 'l', 'd', '!')
print(mytuple[2:5:2])  # ('l', 'o')
print(mytuple[::3])  # ('H', 'l', 'o', 'd')

# Кортежные включения, генераторы кортежей или tuple comprehensions
# Пример генерации списка с кубами чисел
# Кортеж является неизменяемым типом данных, поэтом данный формат записи не подойдет для создания кортежа
pow_ = []
for x in range(10):
    pow_.append(x ** 2)
print(pow_)  # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

# Использование tuple перед генератором обязательно для получения кортежа
# pow_list = (x ** 2 for x in range(10)) - вернет объект генератора, а не кортежа
# <generator object <genexpr> at 0x000002F7C20C9AC0>
# Пример работы генератора кортежей
pow_list = tuple(x ** 2 for x in range(10))
print(pow_list)  # (0, 1, 4, 9, 16, 25, 36, 49, 64, 81)

# Пример работы генератора кортежей if
pow_list =tuple(x ** 2 for x in range(10) if x % 2 == 0)
print(pow_list)  # (0, 4, 16, 36, 64)

# Пример работы генератора словарей в кортеже
pow_list = tuple({x: x ** 2} for x in range(10))
print(pow_list)  # ({0: 0}, {1: 1}, {2: 4}, {3: 9}, {4: 16}, {5: 25}, {6: 36}, {7: 49}, {8: 64}, {9: 81})

