# Изменение значений или пример работы ссылок в Python
mylist_1 = ['Hello', [1, 3, 5]]
mylist_2 = mylist_1
print(f"Список 1: {mylist_1}")
print(f"Список 2: {mylist_2}")
mylist_1[0] = 'World'
print(f"Список 1: {mylist_1}")
print(f"Список 2: {mylist_2}")
print()
# Python создает ссылку для авторого списка на тот же самый объект на который указывает ссылка первого списка
# Это происходит потому, что интерпретатор языка оптимизирует память и не создает нового объекта для списка 2
# Решение довольно простое, сделать полный срез списка, тк срезы это создание нового объекта с определенной длиной
mylist_1 = ['Hello', [1, 3, 5]]
mylist_2 = mylist_1[:]
print(f"Список 1: {mylist_1}")
print(f"Список 2: {mylist_2}")
mylist_1[0] = '!'
print(f"Список 1: {mylist_1}")
print(f"Список 2: {mylist_2}")


# Продвинутые срезы mylist[START:STOP:STEP]
mylist = ['H', 'e', 'l', 'l', 'o', 'W', 'o', 'r', 'l', 'd', '!']
print(mylist)  # ['H', 'e', 'l', 'l', 'W', 'o', 'r', 'l', 'd', '!']
print(mylist[2:5:2])  # ['l', 'o']
print(mylist[::3])  # ['H', 'l', 'o', 'd']


# Списковые включения, генераторы списков или list comprehensions
# Пример генерации списка с кубами чисел
pow_ = []
for x in range(10):
    pow_.append(x ** 2)
print(pow_)  # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

# Пример работы генератора списков
pow_list = [x ** 2 for x in range(10)]
print(pow_list)  # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

# Пример работы генератора списков if
pow_list = [x ** 2 for x in range(10) if x % 2 == 0]
print(pow_list)  # [0, 4, 16, 36, 64]

# Пример работы генератора словарей в списке
pow_list = [{x: x ** 2} for x in range(10)]
print(pow_list)  # [{0: 0}, {1: 1}, {2: 4}, {3: 9}, {4: 16}, {5: 25}, {6: 36}, {7: 49}, {8: 64}, {9: 81}]

