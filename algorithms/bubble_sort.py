# Сортировка пузырьком - это метод сортировки массивов и списков путем последовательного сравнения и обмена
# соседних элементов, если предшествующий оказывается больше последующего.
#
# В процессе выполнения данного алгоритма элементы с большими значениями оказываются в конце списка, а элементы с
# меньшими значениями постепенно перемещаются по направлению к началу списка. Образно говоря, тяжелые элементы падают
# на дно, а легкие медленно всплывают подобно пузырькам воздуха.
#
# В сортировке методом пузырька количество итераций внешнего цикла определяется длинной списка минус единица,
# так как когда второй элемент становится на свое место, то первый уже однозначно минимальный и находится на своем месте
#
# Количество итераций внутреннего цикла зависит от номера итерации внешнего цикла, так как конец списка
# уже отсортирован, и выполнять проход по этим элементам смысла нет.

def swap(lst, indx_1, indx_2):
    lst[indx_1], lst[indx_2] = lst[indx_2], lst[indx_1]


my_list = [21, 25, 9, 17, 43, 12, 4, 32]
for j in range(1, len(my_list) - 1):  # С 1 потому что n-j (n-0) словит ошибку выхода за границы массива
    for i in range(0, len(my_list) - j - 1, 1):
        if my_list[i] > my_list[i + 1]:
            swap(my_list, i, i + 1)

# print(my_list)  # [4, 9, 12, 17, 21, 25, 32, 43]

my_list = [21, 25, 9, 17, 43, 12, 4, 32]
for i in range(len(my_list) - 1):
    print(len(my_list) - i - 1)
    print(my_list)
    for j in range(len(my_list) - i - 1):
        print(my_list[j], my_list[j + 1])
        # if my_list[j] < my_list[j + 1]:  # [43, 32, 25, 21, 17, 12, 9, 4]
        if my_list[j] > my_list[j + 1]:  # [4, 9, 12, 17, 21, 25, 32, 43]
            my_list[j], my_list[j + 1] = my_list[j + 1], my_list[j]

print(my_list)
